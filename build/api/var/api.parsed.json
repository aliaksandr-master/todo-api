{
    "GET todo/%1/item (1)": {
        "url": "todo/$todo_id/item",
        "params_count": 1,
        "method": "GET",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "todo_id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 9
                    }
                ]
            }
        },
        "response": {
            "type": "many",
            "pagenator": {
                "max_limit": "255"
            },
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "todo_id": {
                        "type": "integer"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "date_create": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": false,
            "only_owner": false
        },
        "api_name": "GET todo/$todo_id/item",
        "id": "GET todo/%1/item (1)"
    },
    "GET todo/%1/item/%1 (2)": {
        "url": "todo/$todo_id/item/$id",
        "params_count": 2,
        "method": "GET",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "todo_id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 9
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 23
                    }
                ]
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "date_create": {
                        "type": "string"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": false,
            "only_owner": false
        },
        "api_name": "GET todo/$todo_id/item/$id",
        "id": "GET todo/%1/item/%1 (2)"
    },
    "POST todo/%1/item (1)": {
        "url": "todo/$todo_id/item",
        "params_count": 1,
        "method": "POST",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "todo_id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 10
                    }
                ],
                "INPUT": {
                    "name": {
                        "name": "name",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "is_active": {
                        "name": "is_active",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    }
                }
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "todo_id": {
                        "type": "integer"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "date_create": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": true,
            "only_owner": true
        },
        "api_name": "POST todo/$todo_id/item",
        "id": "POST todo/%1/item (1)"
    },
    "PUT todo/%1/item/%1 (2)": {
        "url": "todo/$todo_id/item/$id",
        "params_count": 2,
        "method": "PUT",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "todo_id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 9
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 23
                    }
                ],
                "INPUT": {
                    "name": {
                        "name": "name",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "is_active": {
                        "name": "is_active",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    }
                }
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "todo_id": {
                        "type": "integer"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "date_create": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": true,
            "only_owner": true
        },
        "api_name": "PUT todo/$todo_id/item/$id",
        "id": "PUT todo/%1/item/%1 (2)"
    },
    "DELETE todo/%1/item/%1 (2)": {
        "url": "todo/$todo_id/item/$id",
        "params_count": 2,
        "method": "DELETE",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "todo_id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 12
                    },
                    {
                        "name": "id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 26
                    }
                ]
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "status": {
                        "type": "boolean"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": true,
            "only_owner": true
        },
        "api_name": "DELETE todo/$todo_id/item/$id",
        "id": "DELETE todo/%1/item/%1 (2)"
    },
    "GET todo (0)": {
        "url": "todo",
        "params_count": 0,
        "method": "GET",
        "request": {
            "input": {}
        },
        "response": {
            "type": "many",
            "pagenator": {
                "max_limit": "255"
            },
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "link": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_shared": {
                        "type": "boolean"
                    },
                    "sort_order": {
                        "type": "integer"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": true,
            "only_owner": true
        },
        "api_name": "GET todo",
        "id": "GET todo (0)"
    },
    "GET todo/%1 (1)": {
        "url": "todo/$id",
        "params_count": 1,
        "method": "GET",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 9
                    }
                ]
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "link": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_shared": {
                        "type": "boolean"
                    },
                    "sort_order": {
                        "type": "integer"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": false,
            "only_owner": false
        },
        "api_name": "GET todo/$id",
        "id": "GET todo/%1 (1)"
    },
    "POST todo (0)": {
        "url": "todo",
        "params_count": 0,
        "method": "POST",
        "request": {
            "input": {
                "INPUT": {
                    "name": {
                        "name": "name",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "is_shared": {
                        "name": "is_shared",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "sort_order": {
                        "name": "sort_order",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    }
                }
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "link": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_shared": {
                        "type": "boolean"
                    },
                    "sort_order": {
                        "type": "integer"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": true,
            "only_owner": true
        },
        "api_name": "POST todo",
        "id": "POST todo (0)"
    },
    "PUT todo/%1 (1)": {
        "url": "todo/$id",
        "params_count": 1,
        "method": "PUT",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 9
                    }
                ],
                "INPUT": {
                    "name": {
                        "name": "name",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "is_shared": {
                        "name": "is_shared",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "sort_order": {
                        "name": "sort_order",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    }
                }
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "link": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_shared": {
                        "type": "boolean"
                    },
                    "sort_order": {
                        "type": "integer"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": true,
            "only_owner": true
        },
        "api_name": "PUT todo/$id",
        "id": "PUT todo/%1 (1)"
    },
    "DELETE todo/%1 (1)": {
        "url": "todo/$todo_id",
        "params_count": 1,
        "method": "DELETE",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "todo_id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 12
                    }
                ]
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "status": {
                        "type": "boolean"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": true,
            "only_owner": true
        },
        "api_name": "DELETE todo/$todo_id",
        "id": "DELETE todo/%1 (1)"
    },
    "GET user (0)": {
        "url": "user",
        "params_count": 0,
        "method": "GET",
        "request": {
            "input": {}
        },
        "response": {
            "type": "many",
            "pagenator": {
                "max_limit": "255"
            },
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": false,
            "only_owner": false
        },
        "api_name": "GET user",
        "id": "GET user (0)"
    },
    "GET user/%1 (1)": {
        "url": "user/$id",
        "params_count": 1,
        "method": "GET",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 9
                    }
                ]
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": false,
            "only_owner": false
        },
        "api_name": "GET user/$id",
        "id": "GET user/%1 (1)"
    },
    "DELETE user/%1 (1)": {
        "url": "user/$id",
        "params_count": 1,
        "method": "DELETE",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 12
                    }
                ]
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "status": {
                        "type": "boolean"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": true,
            "only_owner": true
        },
        "api_name": "DELETE user/$id",
        "id": "DELETE user/%1 (1)"
    },
    "PUT user/%1 (1)": {
        "url": "user/$id",
        "params_count": 1,
        "method": "PUT",
        "request": {
            "input": {
                "URL": [
                    {
                        "name": "id",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "exists": {
                                "source": "exists",
                                "name": "exists",
                                "method": "_rule__exists",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        },
                        "url_index": 9
                    }
                ],
                "INPUT": {
                    "username": {
                        "name": "username",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "need": {
                                "source": "need['password_old']",
                                "name": "need",
                                "method": "_rule__need",
                                "params": [
                                    "password_old"
                                ]
                            },
                            "unique": {
                                "source": "unique",
                                "name": "unique",
                                "method": "_rule__unique",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "email": {
                        "name": "email",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "valid_email": {
                                "source": "valid_email",
                                "name": "valid_email",
                                "method": "_rule__valid_email",
                                "params": {}
                            },
                            "unique": {
                                "source": "unique",
                                "name": "unique",
                                "method": "_rule__unique",
                                "params": {}
                            },
                            "need": {
                                "source": "need['password_old']",
                                "name": "need",
                                "method": "_rule__need",
                                "params": [
                                    "password_old"
                                ]
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "password_old": {
                        "name": "password_old",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "valid_password": {
                                "source": "valid_password",
                                "name": "valid_password",
                                "method": "_rule__valid_password",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "password_new": {
                        "name": "password_new",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "matches": {
                                "source": "matches['password_new_confirm']",
                                "name": "matches",
                                "method": "_rule__matches",
                                "params": [
                                    "password_new_confirm"
                                ]
                            },
                            "need": {
                                "source": "need['password_old']",
                                "name": "need",
                                "method": "_rule__need",
                                "params": [
                                    "password_old"
                                ]
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "password_new_confirm": {
                        "name": "password_new_confirm",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "matches": {
                                "source": "matches['password_new']",
                                "name": "matches",
                                "method": "_rule__matches",
                                "params": [
                                    "password_new"
                                ]
                            },
                            "need": {
                                "source": "need['password_old']",
                                "name": "need",
                                "method": "_rule__need",
                                "params": [
                                    "password_old"
                                ]
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    }
                }
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": true,
            "only_owner": true
        },
        "api_name": "PUT user/$id",
        "id": "PUT user/%1 (1)"
    },
    "POST user (0)": {
        "url": "user",
        "params_count": 0,
        "method": "POST",
        "request": {
            "input": {
                "INPUT": {
                    "username": {
                        "name": "username",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "unique": {
                                "source": "unique",
                                "name": "unique",
                                "method": "_rule__unique",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "email": {
                        "name": "email",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "valid_email": {
                                "source": "valid_email",
                                "name": "valid_email",
                                "method": "_rule__valid_email",
                                "params": {}
                            },
                            "unique": {
                                "source": "unique",
                                "name": "unique",
                                "method": "_rule__unique",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "password": {
                        "name": "password",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "matches": {
                                "source": "matches['confirm_password']",
                                "name": "matches",
                                "method": "_rule__matches",
                                "params": [
                                    "confirm_password"
                                ]
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "confirm_password": {
                        "name": "confirm_password",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "matches": {
                                "source": "matches['password']",
                                "name": "matches",
                                "method": "_rule__matches",
                                "params": [
                                    "password"
                                ]
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    }
                }
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": false,
            "only_owner": false
        },
        "api_name": "POST user",
        "id": "POST user (0)"
    },
    "GET user/current (0)": {
        "url": "user/current",
        "params_count": 0,
        "method": "GET",
        "request": {
            "input": {}
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": false,
            "only_owner": false
        },
        "api_name": "GET user/current",
        "id": "GET user/current (0)"
    },
    "POST user/login (0)": {
        "url": "user/login",
        "params_count": 0,
        "method": "POST",
        "request": {
            "input": {
                "INPUT": {
                    "username": {
                        "name": "username",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "password": {
                        "name": "password",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "required": {
                                "source": "required",
                                "name": "required",
                                "method": "_rule__required",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    },
                    "remember": {
                        "name": "remember",
                        "type": "string",
                        "beforeFilters": [
                            "xss",
                            "trim"
                        ],
                        "afterFilters": [],
                        "validation": {
                            "optional": {
                                "source": "optional",
                                "name": "optional",
                                "method": "_rule__optional",
                                "params": {}
                            },
                            "max_length": {
                                "source": "max_length",
                                "name": "max_length",
                                "method": "_rule__max_length",
                                "params": [
                                    255
                                ]
                            }
                        }
                    }
                }
            }
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "id": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": false,
            "only_owner": false
        },
        "api_name": "POST user/login",
        "id": "POST user/login (0)"
    },
    "GET user/logout (0)": {
        "url": "user/logout",
        "params_count": 0,
        "method": "GET",
        "request": {
            "input": {}
        },
        "response": {
            "type": "one",
            "output": {
                "data": {
                    "status": {
                        "type": "boolean"
                    }
                },
                "meta": {}
            }
        },
        "access": {
            "need_login": false,
            "only_owner": false
        },
        "api_name": "GET user/logout",
        "id": "GET user/logout (0)"
    },
    "options": {
        "api_root": "/api"
    }
}